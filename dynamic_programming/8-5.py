# 실전문제 8-5 : 1로 만들기

# 정수 X를 입력받기
x = int(input())

# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
d = [0] * 30001   # 1 <= x <= 30000 (최대 30,000까지 가능하기에 1부터 30,000까지 모든 결과를 기록할 수 있도록 크기 설정)
                  # x = 1일 경우 자기 자신이기에 연산 수행 필요 X (0으로 초기화)

# 다이나믹 프로그래밍 (Dynamic Programming) 진행 (보텀업)
for i in range(2, x + 1):   # x = 2일 경우부터 입력으로 들어온 x까지의 모든 경우에 대해 optimal solution 구하기
    # 4가지 경우 중에서 가장 작은 값 고르고 연산 1을 더한 값 출력 -> 점화식 설정 !
    # 매번 min() 함수를 호출하여 값이 더 작은 경우가 존재하면 업데이트하기

    # 현재의 수에서 1을 빼는 경우
    d[i] = d[i - 1] + 1

    # 현재의 수가 2로 나누어 떨어지는 경우
    if i % 2 == 0:
        d[i] = min(d[i], d[i // 2] + 1)

    # 현재의 수가 3으로 나누어 떨어지는 경우
    if i % 3 == 0:
        d[i] = min(d[i], d[i // 3] + 1)

    # 현재의 수가 5로 나누어 떨어지는 경우
    if i % 5 == 0:
        d[i] = min(d[i], d[i // 5] + 1)

print(d[x])
