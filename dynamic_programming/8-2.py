# 예제 8-2 : 피보나치 수열 소스코드 (재귀적) - 탑다운 다이나믹 프로그래밍 소스코드

# 한 번 계산된 결과를 메모이제이션(Memoization) 하기 위한 리스트 초기화
d = [0] * 100   # 총 100개의 원소를 가지는 리스트 각 인덱스에 해당하는 값들을 0으로 초기화
                # 리스트의 크기 100 (0부터 99까지의 인덱스) <- 이유 : 99번째 피보나치 수 구하는 목적

# 피보나치 함수(Fibonacci Function)를 재귀함수로 구현 (탑다운 다이나믹 프로그래밍)
             # 별도의 배열(리스트)을 만들어서 해결된 적이 있는지 없는지의 여부와 값 기록하기
def fibo(x):
    # print('f(' + str(x) + ')', end = ' ')   # 호출되는 함수 확인

    # 종료 조건 (1 혹은 2일 때 1을 반환)
    if x == 1 or x == 2:
        return 1

    # 이미 계산한 적 있는 문제라면 그대로 반환
    if d[x] != 0:   # DP 테이블의 값 확인
        return d[x]
    # 아직 계산하지 않은 문제라면 점화식에 따라서 피보나치 결과 반환
    d[x] = fibo(x - 1) + fibo(x - 2)   # 새로운 문제를 해결해야 한다면 점화식에 따라 계산한 값을 리스트에 기록
    return d[x]   # 최종적으로 x번째 피보나치수 반환

print(fibo(99))